version: '3'
services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - book-service
      - author-service
      # - category-service
    restart: on-failure
    networks:
      - internal-network
      - external-network
  user-service:
    build:
      context: .
      dockerfile: Dockerfile.user-service
    depends_on:
      - postgres
      - redis
    restart: on-failure
    ports:
      - "50051:50051"
    networks:
      - internal-network

  book-service:
    build:
      context: .
      dockerfile: Dockerfile.book-service
    depends_on:
      - postgres
      - redis
    restart: on-failure
    networks:
      - internal-network

  author-service:
    build:
      context: .
      dockerfile: Dockerfile.author-service
    depends_on:
      - postgres
      - redis
    restart: on-failure
    networks:
      - internal-network

  # category-service:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.category-service
  #   depends_on:
  #     - postgres
  #   networks:
  #     - internal-network

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - internal-network

volumes:
  postgres_data:

networks:
  internal-network:
    driver: bridge
  external-network:
    driver: bridge
