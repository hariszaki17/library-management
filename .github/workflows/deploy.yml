name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push API Gateway image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.api-gateway
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/library-management:api-gateway-latest

      - name: Build and push User Service image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.user-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/library-management:user-service-latest

      - name: Build and push Book Service image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.book-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/library-management:book-service-latest

      - name: Build and push Author Service image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.author-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/library-management:author-service-latest

      - name: Build and push Category Service image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.category-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/library-management:category-service-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd library-management
            docker-compose pull
            docker-compose up -d --build
