# Stage 1: Build
FROM golang:1.23 AS builder

WORKDIR /app

# Copy go.mod and go.sum
COPY api-gateway/go.mod api-gateway/go.sum ./

# Copy the proto, api-gateway, and .env files
COPY Makefile ./
COPY proto/ ./proto/
COPY api-gateway/ ./api-gateway/
COPY api-gateway/.env ./api-gateway/.env

# Install protoc and protoc-gen-go
RUN apt-get update && apt-get install -y protobuf-compiler

# Install protoc-gen-go and protoc-gen-go-grpc
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest \
    && go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# Add $GOPATH/bin to PATH
ENV PATH="${PATH}:${GOPATH}/bin"

# Generate .pb.go files from .proto files
RUN make clean

RUN make gen

# Debug: List files in proto/gen
RUN ls -R /app/proto/gen

# Change directory to api-gateway
WORKDIR /app/api-gateway

# Download Go modules
RUN go clean -modcache && go mod download

# Build the application
RUN go build -a -o /app/api-gateway/api-gateway /app/api-gateway/main.go

# Stage 2: Create the final image
FROM alpine:latest

# Install required libraries if needed (example)
RUN apk add --no-cache libc6-compat

# Copy the built application from the builder stage
COPY --from=builder /app/api-gateway/api-gateway /usr/local/bin/api-gateway
COPY --from=builder /app /usr/local/bin/kontolodon

COPY --from=builder /app/api-gateway/.env /.env

EXPOSE 50051
CMD ["/usr/local/bin/api-gateway"]
